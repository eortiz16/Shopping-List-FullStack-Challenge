basePath: /shopping-list-api/v1
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Item:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      purchased:
        type: boolean
      quantity:
        type: integer
    type: object
  models.SuccessResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API server for the Shopping List FullStack Challenge. This
    API provides endpoints for managing a shopping list, including adding, editing,
    retrieving, and deleting items. It integrates with a PostgreSQL database to store
    and manage the shopping list items. The server is built using Go and the Gin framework,
    and it includes middleware for logging and recovery. This documentation provides
    all the necessary details for interacting with the API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Shopping List API
  version: "1.0"
paths:
  /items:
    get:
      consumes:
      - application/json
      description: Retrieves all items from the shopping list.
      produces:
      - application/json
      responses:
        "200":
          description: List of items
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all items
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Adds a new item to the shopping list.
      parameters:
      - description: New Item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "200":
          description: The created item
          schema:
            $ref: '#/definitions/models.Item'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Add a new item
      tags:
      - items
  /items/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an item from the shopping list.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item deleted successfully
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an item
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Updates an existing item in the shopping list.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Item
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.Item'
      produces:
      - application/json
      responses:
        "200":
          description: Item updated successfully
          schema:
            $ref: '#/definitions/models.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an existing item
      tags:
      - items
swagger: "2.0"
